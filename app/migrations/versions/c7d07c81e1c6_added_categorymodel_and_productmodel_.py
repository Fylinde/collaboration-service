"""Added CategoryModel and ProductModel and more features to the existing models

Revision ID: c7d07c81e1c6
Revises: 43310f847582
Create Date: 2024-10-02 09:05:53.198802

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c7d07c81e1c6'
down_revision: Union[str, None] = '43310f847582'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_categories_id'), 'categories', ['id'], unique=False)
    op.create_index(op.f('ix_categories_name'), 'categories', ['name'], unique=True)
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('stock_quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_products_id'), 'products', ['id'], unique=False)
    op.add_column('collaborations', sa.Column('collaboration_type', sa.String(length=10), nullable=False))
    op.add_column('collaborations', sa.Column('product_id', sa.Integer(), nullable=True))
    op.add_column('collaborations', sa.Column('category_id', sa.Integer(), nullable=True))
    op.add_column('collaborations', sa.Column('geographical_exclusivity', sa.Boolean(), nullable=True))
    op.add_column('collaborations', sa.Column('bulk_order_threshold', sa.Integer(), nullable=True))
    op.add_column('collaborations', sa.Column('revenue_sharing_percentage', sa.Float(), nullable=True))
    op.add_column('collaborations', sa.Column('contract_terms', sa.Text(), nullable=True))
    op.add_column('collaborations', sa.Column('collaboration_start_date', sa.DateTime(), nullable=True))
    op.add_column('collaborations', sa.Column('collaboration_end_date', sa.DateTime(), nullable=True))
    op.add_column('collaborations', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.alter_column('collaborations', 'seller_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('collaborations', 'partner_seller_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('collaborations', 'agreement_details',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=False)
    op.create_foreign_key(None, 'collaborations', 'products', ['product_id'], ['id'])
    op.create_foreign_key(None, 'collaborations', 'categories', ['category_id'], ['id'])
    op.add_column('sellers', sa.Column('email', sa.String(length=255), nullable=False))
    op.add_column('sellers', sa.Column('phone_number', sa.String(length=20), nullable=True))
    op.add_column('sellers', sa.Column('business_license', sa.String(length=100), nullable=True))
    op.add_column('sellers', sa.Column('address', sa.String(length=255), nullable=True))
    op.add_column('sellers', sa.Column('warehouse_location', sa.String(length=255), nullable=True))
    op.add_column('sellers', sa.Column('preferred_collaboration_types', sa.String(length=50), nullable=True))
    op.add_column('sellers', sa.Column('seller_rating', sa.Float(), nullable=True))
    op.add_column('sellers', sa.Column('is_active', sa.Boolean(), nullable=True))
    op.add_column('sellers', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('sellers', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.create_unique_constraint(None, 'sellers', ['email'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'sellers', type_='unique')
    op.drop_column('sellers', 'updated_at')
    op.drop_column('sellers', 'created_at')
    op.drop_column('sellers', 'is_active')
    op.drop_column('sellers', 'seller_rating')
    op.drop_column('sellers', 'preferred_collaboration_types')
    op.drop_column('sellers', 'warehouse_location')
    op.drop_column('sellers', 'address')
    op.drop_column('sellers', 'business_license')
    op.drop_column('sellers', 'phone_number')
    op.drop_column('sellers', 'email')
    op.drop_constraint(None, 'collaborations', type_='foreignkey')
    op.drop_constraint(None, 'collaborations', type_='foreignkey')
    op.alter_column('collaborations', 'agreement_details',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('collaborations', 'partner_seller_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('collaborations', 'seller_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('collaborations', 'updated_at')
    op.drop_column('collaborations', 'collaboration_end_date')
    op.drop_column('collaborations', 'collaboration_start_date')
    op.drop_column('collaborations', 'contract_terms')
    op.drop_column('collaborations', 'revenue_sharing_percentage')
    op.drop_column('collaborations', 'bulk_order_threshold')
    op.drop_column('collaborations', 'geographical_exclusivity')
    op.drop_column('collaborations', 'category_id')
    op.drop_column('collaborations', 'product_id')
    op.drop_column('collaborations', 'collaboration_type')
    op.drop_index(op.f('ix_products_id'), table_name='products')
    op.drop_table('products')
    op.drop_index(op.f('ix_categories_name'), table_name='categories')
    op.drop_index(op.f('ix_categories_id'), table_name='categories')
    op.drop_table('categories')
    # ### end Alembic commands ###
